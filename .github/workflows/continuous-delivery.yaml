name: Continuous Delivery

on:
  push:
    branches:
      - master

jobs:
  release:
    if: contains(github.event.commits[0].message, 'chore(release)') == false
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Fetch all history.
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v3.6.0
        with:
          cache: 'npm'
          node-version: 16
          registry-url: 'https://npm.pkg.github.com'
      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-progress --prefer-offline
      - name: Build
        run: |
          # Workaround https://github.com/zeit/ncc/issues/457.
          mv tsconfig.production.json tsconfig.json
          npm run build
      - env:
          GITHUB_TOKEN: ${{ secrets.DOTTBOTT_TOKEN }}
        id: release
        name: Release
        uses: ridedott/release-me-action@v3.7.3
        with:
          commit-assets: |
            ./dist
          node-module: true
          release-rules-append: |
            [
              { "release": false, "scope": "deps-dev", "type": "chore" }
            ]
      - if: steps.release.outputs.released == 'true'
        name: Setup Node.js with GitHub Packages
        uses: actions/setup-node@v3.6.0
        with:
          registry-url: 'https://npm.pkg.github.com'
      - env:
          NODE_AUTH_TOKEN: ${{ secrets.DOTTBOTT_TOKEN }}
        if: steps.release.outputs.released == 'true'
        name: Publish to GitHub Packages
        run: npm publish
      - if: steps.release.outputs.released == 'true'
        name: Authenticate Git
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          persist-credentials: true
          token: ${{ secrets.DOTTBOTT_TOKEN }}
      - if: steps.release.outputs.released == 'true'
        name: Tag
        run: |
          git config --global user.name '{{ secrets.DOTTBOTT_USER_NAME }}'
          git config --global user.email '{{ secrets.DOTTBOTT_USER_EMAIL }}'
          git push origin :refs/tags/'v${{ steps.release.outputs.major }}'
          git tag 'v${{ steps.release.outputs.major }}' --force
          git push --tags
    timeout-minutes: 10
